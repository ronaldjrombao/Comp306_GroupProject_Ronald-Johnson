trigger:
  none

pool:
  name: "Comp367_SH_Agent"

variables:
  projectName: 'BudgetManagementAPI'
  testProject: 'BudgetManagementAPI.Test'
  dockerHubRepo: 'ronaldjrombao/comp367group'
  dockerfilePath: './Dockerfile'
  shortSha: $[substring(variables['Build.SourceVersion'], 0, 8)]
  testAssembly: '**\BudgetManagementAPI.Test.dll'

stages:
- stage: SonarQubeAnalysis
  displayName: Code Analysis and Coverage
  jobs:
  - job: Analysis
    displayName: Run SonarQube with Code Coverage
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '8.0.407'

    - script: dotnet restore Ombao_EjehComp306.sln
      displayName: 'Restore Solution'

    - task: SonarQubePrepare@7
      inputs:
        SonarQube: 'SonarqubeLocal'
        scannerMode: 'dotnet'
        projectKey: 'Comp367BudgetAPI'
        projectName: 'Comp367BudgetAPI'
        extraProperties: |
          sonar.cs.cobertura.reportsPaths=$(Build.SourcesDirectory)\**\coverage.cobertura.xml

    - script: dotnet build Ombao_EjehComp306.sln --no-incremental
      displayName: 'Build Project'

    - script: dotnet test $(testProject)/$(testProject).csproj --collect:"XPlat Code Coverage;Format=cobertura,opencover" --logger:"trx"
      displayName: 'Run Tests with Coverage and TRX'

    - task: PowerShell@2
      displayName: 'Move coverage reports to TestResults root'
      inputs:
        targetType: 'inline'
        script: |
          $coverageDir = "$(Build.SourcesDirectory)\BudgetManagementAPI.Test\TestResults"
          $files = Get-ChildItem -Path $coverageDir -Recurse -Include coverage.cobertura.xml, coverage.opencover.xml
          foreach ($file in $files) {
            Write-Host "Moving $($file.FullName) to $coverageDir"
            Move-Item -Path $file.FullName -Destination $coverageDir -Force
          }
          
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'VSTest'
        testResultsFiles: '**/*.trx'
        searchFolder: '$(Build.SourcesDirectory)'
        failTaskOnMissingResultsFile: true
      displayName: 'Publish .trx Test Results'

    - task: SonarQubeAnalyze@7
      displayName: 'Run SonarQube Analysis'

    - task: SonarQubePublish@7
      inputs:
        pollingTimeoutSec: '300'
      displayName: 'Publish SonarQube Report'

- stage: BuildAndPush
  displayName: Build & Push Docker Image
  dependsOn: SonarQubeAnalysis
  jobs:
  - job: DockerBuildPush
    displayName: Build and Push Docker Image
    steps:
    - task: Docker@2
      displayName: 'Login to Docker Hub'
      inputs:
        command: login
        containerRegistry: 'DockerHub'

    - task: Docker@2
      displayName: 'Build Docker Image'
      inputs:
        command: build
        Dockerfile: $(dockerfilePath)
        repository: $(dockerHubRepo)
        tags: |
          api_latest
          $(shortSha)

    - task: Docker@2
      displayName: 'Push Docker Image'
      inputs:
        command: push
        repository: $(dockerHubRepo)
        tags: |
          api_latest
          $(shortSha)
